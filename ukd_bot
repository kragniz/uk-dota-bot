#!/usr/bin/env python

# Bot to collect usernames and locations for users on /r/UKDota.
# Copyright (C) 2012 Louis Taylor <kragniz@gmail.com>
# Licensed under AGPL3 (http://www.gnu.org/licenses/agpl-3.0.txt)

import reddit
import os, sys
import json
import re
import time

class UKBot(object):
    def __init__(self):
        self.api = reddit.Reddit(user_agent='uk-dota-bot')
        self.api.login('uk-dota-bot', open('password').read().strip())
        print 'logged in'
        self.userFile = 'users'
        if os.path.isfile(self.userFile):
            self.users = json.load(open(self.userFile))
            print 'opening users'
        else:
            self.users = {}
            print 'user file "%s" not found, starting afresh' % \
                os.path.realpath(self.userFile)

        print 'opening postcode file'
        self.postcodes = json.load(open('uk-postcode'))

    def checkMessages(self):
        l = reddit.objects.LoggedInRedditor(self.api)
        for m in l.get_unread():
            print 'we have a new message!'
            self.parseMessage(str(m))
            m.mark_as_read()
            return True
        return False

    def parseMessage(self, m):
        lines = m.split('\n')
        user = lines[0][6:]
        
        message = '\n'.join(lines[3:])
        postcodes = re.findall('[A-Z][A-Z]?\d\d?', message.upper())
        steamid = re.findall('https?://steamcommunity.com/.+', message)

        if len(steamid) > 0:
            steamid = steamid[0]
        else:
            steamid = ''

        if len(postcodes) > 0:
            self.users[user] = (postcodes[0], steamid)
            print 'new user:', user, 'from', self.getLocation(postcodes[0])
            json.dump(self.users, open(self.userFile, 'w'))
        else:
            print 'looks like a false alert! No postcode found'

    def getLocation(self, postcode):
        if self.postcodes.has_key(postcode):
            l = self.postcodes[postcode]
            return l['town'], l['county']
        else:
            return False

    def updatePost(self):
        text = '''Hello, this is an automated list for the locations of members of
/r/UKDota. 

If you want your name here, [send a message to
/u/uk-dota-bot](http://www.reddit.com/message/compose/?to=uk-dota-bot&subject=this%20bit%20is%20ignored)
with the first part of your postcode (1-2 letters followed by 1-2 numbers,
e.g. CB4) and optionally your steamID on seperate lines, [like
this](http://i.imgur.com/PBeoul.png). After a short delay,
this post will be regenerated.

Code for this bot is available [here](https://github.com/kragniz/uk-dota-bot). If
there are any problems or unwanted behavior with this bot, contact /u/kragniz

-------------------------

'''
        places = {}

        for user, data in self.users.items():
            print user, data
            postcode = data[0]
            steamid = data[1]

            l = self.getLocation(postcode)
            if l:
                if places.has_key(l[1]):
                    places[l[1]] += [(user, l[0], steamid)]
                else:
                    places[l[1]] = [(user, l[0], steamid)]

        for place, users in places.items():
            text += '''| %s | | *%s* |
|:-|:-|:-
''' % (place, '1 person' if len(users) == 1 else str(len(users)) + ' people')
            for user in users:
                text += '| /u/%s | %s | %s |\n' % (user[0], user[1],
                        '[profile]('+user[2]+')' if user[2] else '') 
            text += '\n'

        botUser = reddit.objects.Redditor(self.api, user_name='uk-dota-bot')
        for p in botUser.get_submitted():
            p.edit(text)

if __name__ == '__main__':
    u = UKBot()
    u.updatePost()
    while True:
        if u.checkMessages():
            u.updatePost()
        time.sleep(10)
